@using Newtonsoft.Json;
@using System.Collections.Generic;
@model PaginatedList< DFACore.Models.UserAccountViewModel>

@{
    Layout = "~/Views/Shared/_AdministrationLayout.cshtml";
    ViewData["Title"] = "Branches";
}

<h3 style="margin-top:50px;">Users</h3>

<div>
    <a asp-action="BlackList" class="btn btn-primary pull-right">View BlackListed Users</a>

    <form asp-action="UserAccount" method="get" style="margin-bottom:20px;">
        <div class="form-row align-items-center">
            @*<div class="col-sm-3 my-1">
                    <label class="sr-only" for="inlineFormInputName">CO</label>
                    <input type="text" class="form-control" id="inlineFormInputName" placeholder="CO Aseana">
                </div>*@
            <div class="col-sm-3 my-1">
                <label class="sr-only" for="inlineFormInputGroupUsername">Name</label>
                <div class="input-group">
                    <input type="text" class="form-control" id="inlineFormInputGroupUsername" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Enter Name or Email here">
                </div>
            </div>
            <div class="col-auto my-1">
                <button type="submit" class="btn btn-primary">Search</button> |
                <a asp-action="UserAccount">Refresh</a>
            </div>
        </div>
    </form>

</div>

<table class="table" style="font-size:12px;margin-top:10px;">
    <thead>
        <tr style="background-color: #217ff3 !important; color: white;">
            <th style="display:none">
                Id
            </th>
            <th>
                Name
            </th>
            <th>
                Email
            </th>
            <th>
                Gender
            </th>
            <th>
                CreatedDate
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td style="display:none">
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.MiddleName) @Html.DisplayFor(modelItem => item.LastName) @Html.DisplayFor(modelItem => item.Suffix)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    <a asp-action="AddToBlackList" asp-route-userId="@item.Id">Add to Blacklist</a>
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Branch)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Roles)
                    </td>
                    <td>
                        <a asp-action="EditAccount" asp-route-userId="@item.Id">Edit</a> |
                        <a asp-action="DeleteAccount" asp-route-branchId="@item.Id">Delete</a>
                    </td>*@
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="UserAccount"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="UserAccount"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>